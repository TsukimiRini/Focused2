[Elements]
    CRegisterObj:
        lang: CLike
        file: *
        element: TVM_REGISTER_GLOBAL::call_expression//*::argument_list/~arg[idx=0]~/"(attrName)"::string_literal[range=(eleRange)]

    CTypeKey:
        lang: CLike
        file: *
        element: *#def//"(key)"::string_literal[range=(eleRange)]
        branches:
            - @def//*_type_key::pointer_declarator

    PyRegisterObj:
        lang: Python
        file: *.py
        element: register_object::call//*::argument_list/~arg~/"(attrName)"::string[range=(eleRange)]

    PyInitLib:
        lang: Python
        file: (file).py
        element: *._init_api::call//*::argument_list/~arg~/"(libName)"::string[range=(eleRange)]

    PythonModuleRefDot:
        lang: Python
        file: *.py
        element: *::dotted_name#dotted/~part[idx=0]~/(mod)
    PythonModuleFieldDot: PythonModuleRefDot
        branches:
            - @dotted/~part[idx=1]~/(var)[range=(eleRange)]
    PythonModuleRefAttr:
        lang: Python
        file: *.py
        element: *::attribute#attr/~part[idx=0]~/(mod)
    PythonModuleFieldAttr: PythonModuleRefAttr
        branches:
            - @attr/~part[idx=1]~/(var)[range=(eleRange)]
[Links]
    Native {
    public:
        ModToPath(mod, path):
            & PyInitLib(init)
            & match(mod, init[file])
            & match(path, cat(init[libName], "."))
        TypeKeyLink(cdef, pyref, defRange, refRange):
            & CTypeKey(cdef)
            & PyRegisterObj(pyref)
            & match(cdef[key], pyref[attrName])
            & match(defRange, cdef[eleRange])
            & match(refRange, pyref[eleRange])
        GlobalObjLink(cdef, pyref, defRange, refRange):
            & CRegisterObj(cdef)
            &   | PythonModuleFieldDot(pyref)
                | PythonModuleFieldAttr(pyref)
            & ModToPath(pyref[mod], path)
            & match(cat(path, pyref[var]), cdef[attrName])
            & match(defRange, cdef[eleRange])
            & match(refRange, pyref[eleRange])
        AggregatedInfo(defFile, defRange, refFile, refRange):
            &   | TypeKeyLink(def, ref, defRange, refRange)
                | GlobalObjLink(def, ref, defRange, refRange)
            & match(defFile, def.file)
            & match(refFile, ref.file)
    }